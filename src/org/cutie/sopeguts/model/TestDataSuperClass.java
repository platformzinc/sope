package org.cutie.sopeguts.model;


import org.cutie.sopeguts.data.GridDataGenerator;
import org.cutie.sopeguts.data.PolarDataGenerator;
import org.cutie.sopeguts.data.Polar3DDataGenerator;
import org.cutie.sopeguts.data.RandomLineDataGenerator;
import org.cutie.sopeguts.data.VAngleDataGenerator;

/**
* This software is protected by an end user licence agreement.
*
*/

public class TestDataSuperClass {

	protected String polarDataFile = "c:/projects/workspace/Sope/src/org/cutie/sopeguts/data/polardata2.properties";
	protected String polar3DDataFile = "c:/projects/workspace/Sope/src/org/cutie/sopeguts/data/polardataxyz.properties";
	protected String vAngleTestDataFile = "c:/projects/workspace/Sope/src/org/cutie/sopeguts/data/vAngle.properties";
	protected String gridsDataFile = "c:/projects/workspace/Sope/src/org/cutie/sopeguts/data/grids.properties";
	protected String randomLineDataFile = "c:/projects/workspace/Sope/src/org/cutie/sopeguts/data/randomLineDataFile.properties";
	public static String leicaFile = "c:/projects/workspace/Sope/src/org/cutie/sopeguts/data/leicaFile.xyz";
	public static String topconFile = "c:/projects/workspace/Sope/src/org/cutie/sopeguts/data/topconFile.xyz";
	public static String sokkiaFile = "c:/projects/workspace/Sope/src/org/cutie/sopeguts/data/sokkiaFile.xyz";
	public static String trimbleFile = "c:/projects/workspace/Sope/src/org/cutie/sopeguts/data/trimbleFile.xyz";

	//TODO:improve accuracy by removing rounding from code MathTools.
	//Introduce rounding for display only perhaps.

	// distance and coord. accuracy
	// accuracy - 5*10^4  == 0.00000001
	// accuracy - 5*10^5  == 0.0000001
	// accuracy - 5*10^6  == 0.000001
	// accuracy - 5*10^7  == 0.00001
	// accuracy - 5*10^8  == 0.0001
	// accuracy - 5*10^9  == 0.001
	// accuracy - 5*10^10 == 0.01
	// accuracy - 5*10^11 == 0.1
	// accuracy - 5*10^12 == doesnt work. limit of doubles
	
	// brgAccuracy is consistent
	
	public static int noTestCases = 100000;//100000;
	public static int mathToolsTestCases = 10000;
	public static int mathToolsAcuteAngleTestCases = 10000;
	public static double changePoints = 100; //traverse, sum of angles

	public static int limitsPower = 7;
	public static double coordLimits = 9 * Math.pow(10, limitsPower);
	public static double coordLimits3D = 9 * Math.pow(10, limitsPower-3);
	public static double randomLineConstant = 31.2456;
	public static int wcbSecondsPod = 4;
	public static int distPod = 4;
	public static int decimalToUserInputPod = 10;
//	public static double distAccuracy = 0.0001;
//	public static double brgAccuracy  = 0.00000001;
	public static double brgPrecision = Math.pow(10, -1 * (wcbSecondsPod + 3));
	public static double distPrecision = Math.pow(10, -1 * (distPod));
	public static double maxe = coordLimits;
	public static double maxn = coordLimits;
	public static double maxD = coordLimits;
	public static int loopsGarbage = 1000;
	public static String outDataFileName = "sope_data.csv";
	//TODO: inc. counter each test .
	public static double testNumber = 0.0;
	
	public static boolean includeStaticTestData = true;
	public static boolean includeAutoBoundaryTestData = true;
	public static boolean includeAutoGeneratedTestCases = true;
	
	
	public TestDataSuperClass(){
	}
	
	public static void createTestData(){

		PolarDataGenerator t;
		Polar3DDataGenerator t3;
		GridDataGenerator g;
		RandomLineDataGenerator r;
		VAngleDataGenerator va;
		
		t = new PolarDataGenerator();
		t3 = new Polar3DDataGenerator();
		g = new GridDataGenerator();
		r = new RandomLineDataGenerator();
		
		//va = new VAngleDataGenerator();
		//va.gen();
		
		t.gen();
		g.gen();
		r.gen();
		t3.gen();
		
	}
	

}